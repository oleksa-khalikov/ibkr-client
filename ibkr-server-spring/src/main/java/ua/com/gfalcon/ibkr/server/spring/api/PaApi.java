/*
 *   Copyright 2016-2022 Oleksii V. KHALIKOV
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

package ua.com.gfalcon.ibkr.server.spring.api;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import ua.com.gfalcon.ibkr.model.Body;
import ua.com.gfalcon.ibkr.model.Performance;
import ua.com.gfalcon.ibkr.model.Summary;
import ua.com.gfalcon.ibkr.model.Transactions;

/**
 * PA API.
 */
@Validated
@Api(value = "pa", description = "the pa API")
@RequestMapping(value = "/v1/api")
public interface PaApi {

    @ApiOperation(
            value = "Account Performance", nickname = "paPerformancePost",
            notes = "Returns the performance (MTM) for the given accounts, if more than one account is passed, the"
                    + " result is consolidated.",
            response = Performance.class, tags = {"PortfolioAnalyst"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "returns an object", response = Performance.class)})
    @RequestMapping(value = "/pa/performance", produces = {"application/json"}, method = RequestMethod.POST)
    ResponseEntity<Performance> paPerformancePost(
            @ApiParam(value = "an array of account ids", required = true) @Valid @RequestBody Body body);


    @ApiOperation(
            value = "Account Balance's Summary", nickname = "paSummaryPost",
            notes = "Returns a summary of all account balances for the given accounts, if more than one account"
                    + " is passed, the result is consolidated.",
            response = Summary.class, tags = {"PortfolioAnalyst"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "returns an object", response = Summary.class)})
    @RequestMapping(value = "/pa/summary", produces = {"application/json"}, method = RequestMethod.POST)
    ResponseEntity<Summary> paSummaryPost(
            @ApiParam(value = "an array of account ids", required = true) @Valid @RequestBody Body body);


    @ApiOperation(
            value = "Position's Transaction History", nickname = "paTransactionsPost",
            notes = "transaction history for a given number of conids and accounts. Types of transactions include"
                    + " dividend payments, buy and sell transactions, transfers. ",
            response = Transactions.class, tags = {"PortfolioAnalyst"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "returns an object", response = Transactions.class)})
    @RequestMapping(value = "/pa/transactions", produces = {"application/json"}, method = RequestMethod.POST)
    ResponseEntity<Transactions> paTransactionsPost(
            @ApiParam(value = "", required = true) @Valid @RequestBody Body body);

}
