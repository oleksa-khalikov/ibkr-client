/*
 * MIT License
 *
 * Copyright (c) 2015-2022 Oleksii Khalikov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Client Portal Web API
 * Client Poral Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ua.com.gfalcon.ibkr.client.okhttp.api;

import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import ua.com.gfalcon.ibkr.model.AlertActivation;
import ua.com.gfalcon.ibkr.model.AlertRequest;
import ua.com.gfalcon.ibkr.model.AlertResponse;
import ua.com.gfalcon.ibkr.model.Body;

/**
 * API tests for AlertApi
 */
@Ignore
public class AlertApiTest {

    private final AlertApi api = new AlertApi();


    /**
     * Activate or deactivate an alert
     * <p>
     * Please note, if alertId is 0, it will activate/deactivate all alerts
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void iserverAccountAccountIdAlertActivatePostTest() throws Exception {
        String accountId = null;
        AlertActivation body = null;
        Object response = api.iserverAccountAccountIdAlertActivatePost(accountId, body);

        // TODO: test validations
    }

    /**
     * Delete an alert
     * <p>
     * Please be careful, if alertId is 0, it will delete all alerts
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void iserverAccountAccountIdAlertAlertIdDeleteTest() throws Exception {
        String accountId = null;
        String alertId = null;
        Object response = api.iserverAccountAccountIdAlertAlertIdDelete(accountId, alertId);

        // TODO: test validations
    }

    /**
     * Create or modify alert
     * <p>
     * Please note here, DO NOT pass orderId when creating a new alert, toolId is only required for MTA alert
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void iserverAccountAccountIdAlertPostTest() throws Exception {
        String accountId = null;
        AlertRequest body = null;
        Object response = api.iserverAccountAccountIdAlertPost(accountId, body);

        // TODO: test validations
    }

    /**
     * Get a list of available alerts
     * <p>
     * The response will contain both active and inactive alerts, but it won&#39;t have MTA alert
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void iserverAccountAccountIdAlertsGetTest() throws Exception {
        String accountId = null;
        List<Object> response = api.iserverAccountAccountIdAlertsGet(accountId);

        // TODO: test validations
    }

    /**
     * Get details of an alert
     * <p>
     * Use the endpoint /iserver/account/:accountId/alerts to receive the alert id. The order_id in the response is the
     * alert id.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void iserverAccountAlertIdGetTest() throws Exception {
        String id = null;
        AlertResponse response = api.iserverAccountAlertIdGet(id);

        // TODO: test validations
    }

    /**
     * Get MTA alert
     * <p>
     * Each login user only has one mobile trading assistant (MTA) alert with it&#39;s own unique tool id. The tool id
     * cannot be changed. When modified a new order Id is generated. MTA alerts can not be created or deleted. If you
     * call delete /iserver/account/:accountId/alert/:alertId, it will reset MTA to default. See
     * [here](https://www.interactivebrokers.com/en/software/mobileiphonemobile/mobileiphone.htm#monitor/trading-assistant.htm)
     * for more information on MTA alerts.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void iserverAccountMtaGetTest() throws Exception {
        AlertResponse response = api.iserverAccountMtaGet();

        // TODO: test validations
    }

}
