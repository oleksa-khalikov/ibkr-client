/*
 * MIT License
 *
 * Copyright (c) 2015-2022 Oleksii Khalikov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Client Portal Web API
 * Client Poral Web API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ua.com.gfalcon.ibkr.client.okhttp.api;

import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import ua.com.gfalcon.ibkr.model.CertainSubscription;
import ua.com.gfalcon.ibkr.model.DeviceOption;
import ua.com.gfalcon.ibkr.model.Notifications;

/**
 * API tests for FyiApi
 */
@Ignore
public class FyiApiTest {

    private final FyiApi api = new FyiApi();


    /**
     * Delete a device
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiDeliveryoptionsDeviceIdDeleteTest() throws Exception {
        String deviceId = null;
        Object response = api.fyiDeliveryoptionsDeviceIdDelete(deviceId);

        // TODO: test validations
    }

    /**
     * Enable/Disable device option
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiDeliveryoptionsDevicePostTest() throws Exception {
        DeviceOption body = null;
        Object response = api.fyiDeliveryoptionsDevicePost(body);

        // TODO: test validations
    }

    /**
     * Enable/Disable email option
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiDeliveryoptionsEmailPutTest() throws Exception {
        String enabled = null;
        Object response = api.fyiDeliveryoptionsEmailPut(enabled);

        // TODO: test validations
    }

    /**
     * Get delivery options
     * <p>
     * options for sending fyis to email and other devices
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiDeliveryoptionsGetTest() throws Exception {
        Object response = api.fyiDeliveryoptionsGet();

        // TODO: test validations
    }

    /**
     * Get disclaimer for a certain kind of fyi
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiDisclaimerTypecodeGetTest() throws Exception {
        String typecode = null;
        Object response = api.fyiDisclaimerTypecodeGet(typecode);

        // TODO: test validations
    }

    /**
     * Mark disclaimer read
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiDisclaimerTypecodePutTest() throws Exception {
        String typecode = null;
        Object response = api.fyiDisclaimerTypecodePut(typecode);

        // TODO: test validations
    }

    /**
     * Get a list of notifications
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiNotificationsGetTest() throws Exception {
        String max = null;
        String exclude = null;
        String include = null;
        Notifications response = api.fyiNotificationsGet(max, exclude, include);

        // TODO: test validations
    }

    /**
     * Get more notifications based on a certain one
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiNotificationsMoreGetTest() throws Exception {
        String id = null;
        Notifications response = api.fyiNotificationsMoreGet(id);

        // TODO: test validations
    }

    /**
     * Get a list of notifications
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiNotificationsNotificationIdPutTest() throws Exception {
        String notificationId = null;
        Object response = api.fyiNotificationsNotificationIdPut(notificationId);

        // TODO: test validations
    }

    /**
     * Get a list of subscriptions
     * <p>
     * Return the current choices of subscriptions, we can toggle the option
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiSettingsGetTest() throws Exception {
        List<Object> response = api.fyiSettingsGet();

        // TODO: test validations
    }

    /**
     * Enable/Disable certain subscription
     * <p>
     * Configure which typecode you would like to enable/disable.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiSettingsTypecodePostTest() throws Exception {
        String typecode = null;
        CertainSubscription body = null;
        Object response = api.fyiSettingsTypecodePost(typecode, body);

        // TODO: test validations
    }

    /**
     * Get unread number of fyis. The HTTP method POST is also supported.
     * <p>
     * Returns the total number of unread fyis
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void fyiUnreadnumberGetTest() throws Exception {
        Object response = api.fyiUnreadnumberGet();

        // TODO: test validations
    }

}
